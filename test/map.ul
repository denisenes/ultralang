fn map f xs = cond
    | is_nil(xs) => xs
    | #True      => 
        let hd = car(xs) in
        let tl = cdr(xs) in
        f(hd) : map(f, tl)
    endcond
;;

fn sum_list xs acc = cond
    | is_nil(xs) => acc
    | #True => sum_list(cdr(xs), acc + car(xs))
    endcond
;;

fn test_map nothing =
    let lst1 = [1,2,3,4,5] in
    let lst2 = map((lam x = x * x), lst1) in
    sum_list(lst2, 0)
;;

test_map(nothing);;