fn list_eq xs ys = cond
    | is_nil(xs) && is_nil(ys)      => #True
    | is_nil(xs) && not(is_nil(ys)) => #False
    | not(is_nil(xs)) && is_nil(ys) => #False
    | #True =>
        let x = head(xs) in
        let y = head(ys) in
        (x == y) && list_eq(tail(xs), tail(ys))
;;

fn test nothing =
    let a = list_eq([1,2,3,4,5], [1,2,3,4,5]) in
    let b = list_eq([1,2,3,4],   [1,2,3,4,5]) in
    let c = list_eq([1,2,3,4,5], [1,2,2,4,5]) in
    [a, b, c]
;;

test(nothing);;